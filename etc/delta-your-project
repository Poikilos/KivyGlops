#!/bin/sh
original_project_name=KivyGlops
original_project_folder=$HOME/Documents/GitHub/$original_project_name
if [ -d "$HOME/GitHub/$original_project_name" ]; then
  original_project_folder=$HOME/GitHub/$original_project_name
fi
if [ ! -d "$original_project_folder" ]; then
  echo "$original_project_name was not found. This script must be modified by hand to work with any other base."
  exit 1
fi
#/home/local/FBM/jgustafson/Desktop/na2021/opengl
my_project_folder=$1
if [ ! -d "$my_project_folder" ]; then
  echo "$my_project_folder was not found. The parameter must be your project folder."
  exit 1
fi

echo "Only run this script if you don't care about changes you made to $my_project_folder other than new files (as compared to $original_project_folder)!"
#hmm... unutbu's first solution seems to need to use A again for some reason, so don't use.
#find $original_project_folder  -depth -type f -print0 | xargs -0 -I{} bash -c 'rm "$my_project_folder${1#*$original_project_name}"' - {}
#find /home/unutbu/tmp/A  -depth -type f -print0 | xargs -0 -I{} bash -c 'rm "/home/unutbu/tmp/B${1#*A}"' - {}
#find $original_project_folder  -depth -type f -print0 | xargs -0 -I{} bash -c 'echo "$my_project_folder${1#*/home/local/FBM/jgustafson/Desktop/na2021/opengl}"' - {}
#echo "Only run this script if you only want to keep changes you made to $my_project_folder (as compared to $original_project_folder) and delete everything else from $my_project_folder!"
echo "see also https://askubuntu.com/questions/236809/how-to-clean-duplicates-existing-in-one-folder-from-another-recursively"
#unutbu's other solutions (using content-based duplicate finder tools):
#sudo apt install rdfind
rdfind -deleteduplicates true "$original_project_folder" "$my_project_folder"
#sudo apt install fdupes
#fdupes --recurse --delete --noprompt $original_project_folder $my_project_folder 